package thread.a3threadcase3;import java.util.concurrent.ExecutionException;import java.util.concurrent.FutureTask;/** * @Classname ThreadDemo * @Pakage: thread.threadcase3 * @Author: hzr * @Description TODO * @Date 2025/5/26 10:22 * @Created by 22906 * @Version 1.0.0 */public class ThreadDemo {    public static void main(String[] args) throws ExecutionException, InterruptedException {        /**         * 多线程的第三种实现方式         * 特点：可以获取到多线程的运行的结果         * 1、实现Callable接口         * 2、重写call方法（是有返回值的，表示线程运行）         *         * 3、创建MyCallable对象（表示多线程要处理的认为）         * 4、创建FutureTask对象（作用多线程运行的结果）         * 5、创建Thread线程对象，并启动         */        //创建MyCallable对象（表示多线程要处理的认为）        MyCallable mc = new MyCallable();        //创建FutureTask对象（作用多线程运行的结果）        FutureTask ft = new FutureTask(mc);        //创建Thread线程对象        Thread thread = new Thread(ft);        //启动线程        thread.start();        Integer result = (Integer) ft.get();        System.out.println(result);    }}