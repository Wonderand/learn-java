package thread.A_heima.test;import java.math.BigDecimal;import java.math.RoundingMode;import java.util.Random;/** * @Classname MyThread1 * @Pakage: thread.A_heima.test * @Author: hzr * @Description TODO * @Date 2025/6/9 14:53 * @Created by 22906 * @Version 1.0.0 */public class MyThread1 extends Thread {    //共享数据    static BigDecimal money = BigDecimal.valueOf(100.0);    //红包个数    static int count = 3;    //最小的中奖金额    static final BigDecimal MIN = BigDecimal.valueOf(0.01);    @Override    public void run() {        //循环        //同步代码块        synchronized (thread.A_heima.test.MyThread.class) {            if (count == 0) {                System.out.println(getName() + "没有抢到红包!");            } else {                //判断，共享数据是否到了末尾（没有到末尾）                //定义一个字段表示中奖金额                BigDecimal prize;                if (count == 1) {                    //表示此时是最后一个红包                    //就无需随机，剩余所有的钱都中间                    prize = money;                } else {                    //获取抽奖范围                    double bounds = money.subtract(BigDecimal.valueOf(count - 1).multiply(MIN)).doubleValue();                    Random r = new Random();                    //抽奖金额                    prize = BigDecimal.valueOf(r.nextDouble(bounds));                }                //设置抽中红包，小数点保留两位，四舍五入                prize = prize.setScale(2, RoundingMode.HALF_UP);                //在总金额中减去对应的钱                money = money.subtract(prize);                //红包少了一个                count--;                //本次红包的信息进行打印                System.out.println(getName() + "抢到了" + prize + "元");            }        }        //判断，共享数据是否到了末尾（已经到末尾）        //判断,共享数据是否到了末尾（没有到末尾）    }}