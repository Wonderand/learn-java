package thread.A_heima.a13waitandnotify;/** * @Classname Foodie * @Pakage: thread.a13waitandnotify * @Author: hzr * @Description TODO * @Date 2025/5/26 16:43 * @Created by 22906 * @Version 1.0.0 */public class Foodie extends Thread {    /**     * 1.循环     * 2.synchronized同步代码块     * 3.判断共享数据是否到了末尾（到了末尾）     * 4.判断共享数据是否到了末尾（没有到末尾，执行核心逻辑）     */    @Override    public void run() {        while (true) {            synchronized (Desk.lock) {                if (Desk.count == 0) {                    break;                } else {//                    //判断桌子上是否有食物//                    if (Desk.foodFlag == 0) {//                        //如果没有就等待//                        try {//                            Desk.lock.wait();//让当前线程跟锁进行绑定//                        } catch (InterruptedException e) {//                            e.printStackTrace();//                        }//                    } else {//                        //把吃的总数-1//                        Desk.count--;//                        //如果有就开吃//                        System.out.println("吃货正在吃面条，还能再吃：" + Desk.count + "碗！！！");//                        //吃完之后唤醒厨师继续做//                        Desk.lock.notifyAll();//                        Desk.foodFlag = 0;//                    }                    eat();                }            }        }    }    public synchronized void eat() {        //判断桌子上是否有食物        if (Desk.foodFlag == 0) {            //如果没有就等待            try {                Desk.lock.wait();//让当前线程跟锁进行绑定            } catch (InterruptedException e) {                e.printStackTrace();            }        } else {            //把吃的总数-1            Desk.count--;            //如果有就开吃            System.out.println("吃货正在吃面条，还能再吃：" + Desk.count + "碗！！！");            //吃完之后唤醒厨师继续做            Desk.lock.notifyAll();            Desk.foodFlag = 0;        }    }}