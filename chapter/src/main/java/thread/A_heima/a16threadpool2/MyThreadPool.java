package thread.A_heima.a16threadpool2;import java.util.concurrent.*;/** * @Classname MyThreadPool * @Pakage: thread.A_heima.a16threadpool2 * @Author: hzr * @Description TODO * @Date 2025/6/10 12:23 * @Created by 22906 * @Version 1.0.0 */public class MyThreadPool {    public static void main(String[] args) {        /**         * ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor         * （核心线程，最大线程数量，空闲线程最大存活时间，任务队列，创建线程工厂，任务拒绝策略）         * 参数一：核心线程数量       不能小于0         * 参数二：最大线程数量       不能小于0，最大线程数量 >= 核心线程数量         * 参数三：空闲线程最大存活时间       不能小于0         * 参数四：任务队列        不能为null         * 参数五：创建线程工厂     不能为null         * 参数六：任务拒绝策略     不能为null         */        ThreadPoolExecutor pool = new ThreadPoolExecutor(                3, //  核心线程数量                6, //  最大线程数量                60, //  空闲线程最大存活时间                TimeUnit.SECONDS, //  时间单位                new ArrayBlockingQueue<>(3), //  任务队列                Executors.defaultThreadFactory(), //  创建线程工厂                new ThreadPoolExecutor.AbortPolicy() //  任务拒绝策略        );        pool.submit(new MyRunnable());        pool.submit(new MyRunnable());        pool.submit(new MyRunnable());        pool.shutdown();    }}