package thread.a11threadsafe3;import java.util.concurrent.locks.Lock;import java.util.concurrent.locks.ReentrantLock;/** * @Classname MyThread * @Pakage: thread.a11threadsafe3 * @Author: hzr * @Description TODO * @Date 2025/5/26 15:53 * @Created by 22906 * @Version 1.0.0 */public class MyThread extends Thread {    static int ticket = 0;    static Lock lock = new ReentrantLock();    @Override    public void run() {        //1、循环        while (true) {//            synchronized (MyThread.class){            lock.lock();            try {                if (ticket == 100) {                    break;                } else {                    try {                        Thread.sleep(10);                    } catch (InterruptedException e) {                        e.printStackTrace();                    }                    //2、 ticket++                    ticket++;                    //3、 输出                    System.out.println(getName() + "正在卖第" + ticket + "张票");                }            } catch (Exception e) {                e.printStackTrace();            } finally {                lock.unlock();            }//            }        }    }}