package io.nio.socket;import org.junit.Test;import java.net.InetAddress;import java.net.InetSocketAddress;import java.net.SocketAddress;import java.nio.ByteBuffer;import java.nio.channels.DatagramChannel;import java.nio.charset.Charset;/** * @Classname DatagramChannelDemo1 * @Author: hzr * @Description TODO * @Version 1.0.0 * @Date 2023/12/3 15:46 * @Created by 22906 *///datagramChannel是无连接的，对应udp\ippublic class DatagramChannelDemo1 {    //发送实现    @Test    public void sendDatagram() throws Exception {        //打开DatagramChannel        DatagramChannel sendChannel = DatagramChannel.open();        InetSocketAddress sendAddress = new InetSocketAddress("127.0.0.1", 9999);        //发送        while (true) {            ByteBuffer buffer = ByteBuffer.wrap("胡志荣发送".getBytes("UTF-8"));            sendChannel.send(buffer, sendAddress);            System.out.println("发送成功");            Thread.sleep(1000);        }    }    // 接收实现    @Test    public void receiveDatagram() throws Exception {        //打开DatagramChannel        DatagramChannel receiveChannel = DatagramChannel.open();        InetSocketAddress receiveAddress = new InetSocketAddress(9999);        //绑定        receiveChannel.bind(receiveAddress);        // buffer        ByteBuffer receiveBuffer = ByteBuffer.allocate(1024);        // 接收        while (true) {            receiveBuffer.clear();            SocketAddress socketAddress = receiveChannel.receive(receiveBuffer);            receiveBuffer.flip();            System.out.println(socketAddress.toString());            System.out.println((Charset.forName("UTF-8")).decode(receiveBuffer));        }    }    // 连接 read和 write    @Test    public void testConnet() throws Exception{        //打开DatagramChannel        DatagramChannel connChannel = DatagramChannel.open();        // 绑定        connChannel.bind(new InetSocketAddress(9999));        // 连接        connChannel.connect(new InetSocketAddress("127.0.0.1",9999));        // write方法        ByteBuffer buffer = ByteBuffer.wrap("胡志荣测试连接发送".getBytes("UTF-8"));        connChannel.write(buffer);        // buffer        ByteBuffer readBuffer = ByteBuffer.allocate(1024);        while (true){            readBuffer.clear();            connChannel.read(readBuffer);            readBuffer.flip();            System.out.println("接受成功");            System.out.println((Charset.forName("UTF-8")).decode(readBuffer));        }    }}