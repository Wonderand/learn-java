package web.socket;import java.io.*;import java.net.ServerSocket;import java.net.Socket;/** * @Classname TcpServer * @Pakage: web.socket * @Author: hzr * @Description TODO * @Date 2024/5/4 21:28 * @Created by 22906 * @Version 1.0.0 */public class TcpServer {    public static void main(String[] args) throws IOException {        //1.在本机9999端口监听，等待连接        ServerSocket server = new ServerSocket(9999);        System.out.println("服务端，在9999端口监听，等待连接...");        //2.当没有客户端连接9999端口时，程序会阻塞，等待连接，如果客户端连接，则会返回socket对象，程序继续        Socket socket = server.accept();        System.out.println("服务端 socket =" + socket);        //3.通过socket.getInputStream()读取客户端显示的数据，显示，字节流        InputStream inputStream = socket.getInputStream();        //4.字节流IO读取//        byte[] buf = new byte[1024];//        int readLen = 0;//        while ((readLen=inputStream.read(buf)) != -1){//            System.out.println(new String(buf,0,readLen)); // 根据读取到的实际长度，显示内容。//        }        // 字符流IO读取        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(inputStream));        String s = bufferedReader.readLine();        System.out.println(s);//输出        //5.获取socket输出流 字节流        OutputStream outputStream = socket.getOutputStream();//        outputStream.write("hello client".getBytes());        // 字符流IO写入        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(outputStream));        bufferedWriter.write("hello client 字符流");        bufferedWriter.newLine();        bufferedWriter.flush();        // 设置结束标记，字节//        socket.shutdownOutput();        //6.关闭流和socket//        inputStream.close();//        outputStream.close();        socket.close();        server.close();    }}